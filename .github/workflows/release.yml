name:  Unchained Launcher Tag Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write


# TODO: Run integration tests. Set up some kind of stubbed environment for the tests to run in.
jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]
    runs-on: windows-latest
    env:
      GUI_Project_Path: UnchainedLauncher.GUI
    steps:
    - uses: actions/checkout@v4
    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.x'
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c ${{ matrix.configuration }}
    - name: Run Unit Tests
      run: dotnet test -c ${{ matrix.configuration }} .\UnchainedLauncher.Core.Tests.Unit\
      
    # Puts binaries in ${{ env.GUI_Project_Path }}\bin\${{ matrix.configuration }}\net6.0-windows\win-x64\publish\
    - name: Package ${{ matrix.configuration }} binaries
      run: dotnet publish -c ${{ matrix.configuration}} 

    - name: Upload ${{ matrix.configuration }} Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: UnchainedLauncher_${{ matrix.configuration }}_${{ github.sha }}
        path: ${{ env.GUI_Project_Path }}\bin\${{ matrix.configuration }}\net6.0-windows\win-x64\publish\

  publish:
    needs: build
    runs-on: windows-latest
    steps:
    - name: Download Debug Artifacts
      uses: actions/download-artifact@v4.1.8
      with:
        name: UnchainedLauncher_Debug_${{ github.sha }}
        path: results/Debug

    - name: Download Release Artifacts
      uses: actions/download-artifact@v4.1.8
      with:
        name: UnchainedLauncher_Release_${{ github.sha }}
        path: results/Release

    - name: Set file names
      run: |
        mv results/Debug/UnchainedLauncher.exe UnchainedLauncher_dbg.exe
        mv results/Debug/UnchainedLauncher.pdb UnchainedLauncher_dbg.pdb
        mv results/Release/UnchainedLauncher.exe UnchainedLauncher.exe

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref }}
        release_name: "Release ${{ github.ref }}: ${{ env.tag_annotation }}"
        draft: false
        prerelease: true
        files: |
          UnchainedLauncher_dbg.exe
          UnchainedLauncher_dbg.pdb
          UnchainedLauncher.exe
        body: |
          ${{ github.ref }}